// Generated by view binder compiler. Do not edit!
package com.translator.app.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.bottomnavigation.BottomNavigationView;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.card.MaterialCardView;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import com.translator.app.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final BottomNavigationView bottomNavigation;

  @NonNull
  public final ImageButton btnCopyTranslation;

  @NonNull
  public final ImageButton btnFavorite;

  @NonNull
  public final ImageButton btnSwapLanguages;

  @NonNull
  public final MaterialButton btnTranslate;

  @NonNull
  public final MaterialCardView cardTranslationResult;

  @NonNull
  public final TextInputEditText etInputText;

  @NonNull
  public final LinearLayout layoutExample;

  @NonNull
  public final LinearLayout layoutPronunciation;

  @NonNull
  public final TextInputLayout tilInputText;

  @NonNull
  public final Toolbar toolbar;

  @NonNull
  public final TextView tvExample;

  @NonNull
  public final TextView tvPronunciation;

  @NonNull
  public final TextView tvSourceLanguage;

  @NonNull
  public final TextView tvTargetLanguage;

  @NonNull
  public final TextView tvTranslationResult;

  private ActivityMainBinding(@NonNull CoordinatorLayout rootView,
      @NonNull BottomNavigationView bottomNavigation, @NonNull ImageButton btnCopyTranslation,
      @NonNull ImageButton btnFavorite, @NonNull ImageButton btnSwapLanguages,
      @NonNull MaterialButton btnTranslate, @NonNull MaterialCardView cardTranslationResult,
      @NonNull TextInputEditText etInputText, @NonNull LinearLayout layoutExample,
      @NonNull LinearLayout layoutPronunciation, @NonNull TextInputLayout tilInputText,
      @NonNull Toolbar toolbar, @NonNull TextView tvExample, @NonNull TextView tvPronunciation,
      @NonNull TextView tvSourceLanguage, @NonNull TextView tvTargetLanguage,
      @NonNull TextView tvTranslationResult) {
    this.rootView = rootView;
    this.bottomNavigation = bottomNavigation;
    this.btnCopyTranslation = btnCopyTranslation;
    this.btnFavorite = btnFavorite;
    this.btnSwapLanguages = btnSwapLanguages;
    this.btnTranslate = btnTranslate;
    this.cardTranslationResult = cardTranslationResult;
    this.etInputText = etInputText;
    this.layoutExample = layoutExample;
    this.layoutPronunciation = layoutPronunciation;
    this.tilInputText = tilInputText;
    this.toolbar = toolbar;
    this.tvExample = tvExample;
    this.tvPronunciation = tvPronunciation;
    this.tvSourceLanguage = tvSourceLanguage;
    this.tvTargetLanguage = tvTargetLanguage;
    this.tvTranslationResult = tvTranslationResult;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.bottomNavigation;
      BottomNavigationView bottomNavigation = ViewBindings.findChildViewById(rootView, id);
      if (bottomNavigation == null) {
        break missingId;
      }

      id = R.id.btnCopyTranslation;
      ImageButton btnCopyTranslation = ViewBindings.findChildViewById(rootView, id);
      if (btnCopyTranslation == null) {
        break missingId;
      }

      id = R.id.btnFavorite;
      ImageButton btnFavorite = ViewBindings.findChildViewById(rootView, id);
      if (btnFavorite == null) {
        break missingId;
      }

      id = R.id.btnSwapLanguages;
      ImageButton btnSwapLanguages = ViewBindings.findChildViewById(rootView, id);
      if (btnSwapLanguages == null) {
        break missingId;
      }

      id = R.id.btnTranslate;
      MaterialButton btnTranslate = ViewBindings.findChildViewById(rootView, id);
      if (btnTranslate == null) {
        break missingId;
      }

      id = R.id.cardTranslationResult;
      MaterialCardView cardTranslationResult = ViewBindings.findChildViewById(rootView, id);
      if (cardTranslationResult == null) {
        break missingId;
      }

      id = R.id.etInputText;
      TextInputEditText etInputText = ViewBindings.findChildViewById(rootView, id);
      if (etInputText == null) {
        break missingId;
      }

      id = R.id.layoutExample;
      LinearLayout layoutExample = ViewBindings.findChildViewById(rootView, id);
      if (layoutExample == null) {
        break missingId;
      }

      id = R.id.layoutPronunciation;
      LinearLayout layoutPronunciation = ViewBindings.findChildViewById(rootView, id);
      if (layoutPronunciation == null) {
        break missingId;
      }

      id = R.id.tilInputText;
      TextInputLayout tilInputText = ViewBindings.findChildViewById(rootView, id);
      if (tilInputText == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      id = R.id.tvExample;
      TextView tvExample = ViewBindings.findChildViewById(rootView, id);
      if (tvExample == null) {
        break missingId;
      }

      id = R.id.tvPronunciation;
      TextView tvPronunciation = ViewBindings.findChildViewById(rootView, id);
      if (tvPronunciation == null) {
        break missingId;
      }

      id = R.id.tvSourceLanguage;
      TextView tvSourceLanguage = ViewBindings.findChildViewById(rootView, id);
      if (tvSourceLanguage == null) {
        break missingId;
      }

      id = R.id.tvTargetLanguage;
      TextView tvTargetLanguage = ViewBindings.findChildViewById(rootView, id);
      if (tvTargetLanguage == null) {
        break missingId;
      }

      id = R.id.tvTranslationResult;
      TextView tvTranslationResult = ViewBindings.findChildViewById(rootView, id);
      if (tvTranslationResult == null) {
        break missingId;
      }

      return new ActivityMainBinding((CoordinatorLayout) rootView, bottomNavigation,
          btnCopyTranslation, btnFavorite, btnSwapLanguages, btnTranslate, cardTranslationResult,
          etInputText, layoutExample, layoutPronunciation, tilInputText, toolbar, tvExample,
          tvPronunciation, tvSourceLanguage, tvTargetLanguage, tvTranslationResult);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
